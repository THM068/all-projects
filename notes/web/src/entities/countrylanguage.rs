//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "countrylanguage")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub countrycode: String,
    #[sea_orm(primary_key, auto_increment = false)]
    pub language: String,
    pub isofficial: bool,
    #[sea_orm(column_type = "Float")]
    pub percentage: f32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::country::Entity",
        from = "Column::Countrycode",
        to = "super::country::Column::Code",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Country,
}

impl Related<super::country::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Country.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
